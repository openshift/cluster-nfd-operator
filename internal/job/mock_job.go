// Code generated by MockGen. DO NOT EDIT.
// Source: job.go
//
// Generated by this command:
//
//	mockgen -source=job.go -package=job -destination=mock_job.go JobAPI
//

// Package job is a generated GoMock package.
package job

import (
	context "context"
	reflect "reflect"

	v1 "github.com/openshift/cluster-nfd-operator/api/v1"
	gomock "go.uber.org/mock/gomock"
	v10 "k8s.io/api/batch/v1"
)

// MockJobAPI is a mock of JobAPI interface.
type MockJobAPI struct {
	ctrl     *gomock.Controller
	recorder *MockJobAPIMockRecorder
	isgomock struct{}
}

// MockJobAPIMockRecorder is the mock recorder for MockJobAPI.
type MockJobAPIMockRecorder struct {
	mock *MockJobAPI
}

// NewMockJobAPI creates a new mock instance.
func NewMockJobAPI(ctrl *gomock.Controller) *MockJobAPI {
	mock := &MockJobAPI{ctrl: ctrl}
	mock.recorder = &MockJobAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJobAPI) EXPECT() *MockJobAPIMockRecorder {
	return m.recorder
}

// CreatePruneJob mocks base method.
func (m *MockJobAPI) CreatePruneJob(ctx context.Context, nfdInstance *v1.NodeFeatureDiscovery, operandImage string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePruneJob", ctx, nfdInstance, operandImage)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreatePruneJob indicates an expected call of CreatePruneJob.
func (mr *MockJobAPIMockRecorder) CreatePruneJob(ctx, nfdInstance, operandImage any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePruneJob", reflect.TypeOf((*MockJobAPI)(nil).CreatePruneJob), ctx, nfdInstance, operandImage)
}

// GetJob mocks base method.
func (m *MockJobAPI) GetJob(ctx context.Context, namespace, name string) (*v10.Job, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetJob", ctx, namespace, name)
	ret0, _ := ret[0].(*v10.Job)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetJob indicates an expected call of GetJob.
func (mr *MockJobAPIMockRecorder) GetJob(ctx, namespace, name any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJob", reflect.TypeOf((*MockJobAPI)(nil).GetJob), ctx, namespace, name)
}
